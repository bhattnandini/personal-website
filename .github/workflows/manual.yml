name: Build and Deploy React app to AWS S3

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

permissions:
  issues: write  # Allow creating issues

jobs:
  website-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # # Debug steps
      # - name: Print Node.js version
      #   run: node --version

      # - name: Print npm version
      #   run: npm --version
      
      # - name: Print environment variables
      #   run: printenv

      # # Step 2: Set up Node.js environment
      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20.15.0' # You can specify your preferred Node.js version

      # # speed up pipeline by caching node modules 
      # - name: Cache Node.js modules
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.npm
      #       ~/.cache
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
            
      # - name: Upgrade AWS CLI
      #   run: pip install --upgrade awscli
        
      - name: Install dependencies
        run: npm ci  # npm ci is preferred over npm install for CI environments

      # Step 4: Build the React app
      - name: Build React app
        run: npm run build # Treating warnings as errors because process.env.CI = true, most CI servers set this as true by default but we need to turn it off because warnings should not be treated as errors 
        env:
          CI: false

      - name: Start the Web App (React)
        run: npm start &
        env:
          CI: false
        
      # Scan for vulnerabilities using OWASP ZAP
      - name: OWASP ZAP Security Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:3000'
          fail-action: true
          format: 'html'
      
      # Upload artifacts
      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html
        
      # - name: Deploy React app to AWS S3
      #   run:
      #     aws s3 sync build/ s3://nandinibhatt.me/ --delete --acl public-read --region us-east-2
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Invalidate CloudFront Cache
      #   run:
      #     aws cloudfront create-invalidation --distribution-id E1JHKWLDY7Q5ZL --paths "/*"
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Notify on Failure
      #   if: failure() # Execute only if previous steps failed
      #   run: |
      #     aws sns publish --topic-arn arn:aws:sns:us-east-2:975050059984:codestar-notifications- --message "Your portfolio deployment has failed."
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
