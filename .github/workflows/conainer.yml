name: Build, test and deploy Docker images 

on:
  push:
    paths:
      - 'Dockerfile'  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

         # # Set up BuildKit cache directory
      # - name: Create cache directory
      #   run: |
      #     mkdir -p /tmp/.buildx-cache

      # # speed up docker build by caching docker layer
      # - name: Cache Docker layers
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-docker-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-docker-
        
        # configure AWS creds once, dont specify everytime in env: block, override it in env if needed
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2  # Replace with your region

      - name: Install Trivy vulnerability scanner
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Build docker image
        run: |
          # docker buildx create --use
          # docker buildx build --cache-to type=local,dest=/tmp/.buildx-cache --cache-from type=local,src=/tmp/.buildx-cache -t nandini-website:latest .
          docker build -t portfolio-website .

      - name: Run Trivy vulnerability scanner docker image 
        run:  trivy image --severity HIGH,CRITICAL --format json --output trivy-docker-results.json portfolio-website

      - uses: actions/upload-artifact@v4
        with:
          name: dockerimage-artifact
          path: trivy-docker-results.json

      # Log in to Amazon ECR Public
      # Could not connect to the endpoint URL: "https://api.ecr-public.us-east-2.amazonaws.com/"
      # Error: Cannot perform an interactive login from a non TTY device
      # Solution: Use region as us-east-1 as AWS supports login in us-east-1 and public repos are available in all regions
      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y9r8y8a8

      # Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag portfolio-website:latest public.ecr.aws/y9r8y8a8/portfolio-website:latest
      
      # Push Docker image to ECR Public
      - name: Push Docker image to Amazon ECR Public
        run: |
          docker push public.ecr.aws/y9r8y8a8/portfolio-website:latest
