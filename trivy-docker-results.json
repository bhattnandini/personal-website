{
  "SchemaVersion": 2,
  "CreatedAt": "2024-09-20T02:47:36.451786-04:00",
  "ArtifactName": "my-react-app",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.20.3"
    },
    "ImageID": "sha256:2c298b23148b15a41b285f8c5ea5a2d484915482c19d763233342ad06bdd6ec5",
    "DiffIDs": [
      "sha256:16113d51b7181f20135f51e8ffbaead20a7671cd783017601f198748ce8a8ebf",
      "sha256:087523896fec79e6bb9a319e7f8ef815b8452cfe7e09d210d76b3b2bec1624cf",
      "sha256:ec57fe534ca60202e2933a10f3459fe45b91e91b06f45c51007542baef5d79d9",
      "sha256:debbe47577a8bd3a42aebc03dbfc1e267a13f156a5672cf5349262309173a037",
      "sha256:7ced8510153ddbf8855b66da43acca94a8cf294514842e1cb23a2612e79ad0d3",
      "sha256:175255ec9886d89c7ed8cf5114877abb07509db1614108d4ee97b9a3bb74fe38",
      "sha256:4da863068df69343f02bbd7343766375e8af0dc0917d76ba680b7651839536d6",
      "sha256:dbc055046852e458eb4f33b89dd57564ec29870fdb874902b0f56aa2b4ca9732",
      "sha256:bdb59690a452041127334eb32d90b404dc8f5e072e0465339c4bba01576f7d64"
    ],
    "RepoTags": [
      "my-react-app:latest"
    ],
    "ImageConfig": {
      "architecture": "arm64",
      "created": "2024-09-20T06:22:01.556696132Z",
      "history": [
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "/bin/sh -c #(nop) ADD file:ee5bb8409915b11413f44cce4c22fed658aba4fb078a448e08dd4ac9a23581f2 in / "
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENV NGINX_VERSION=1.27.1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENV DYNPKG_RELEASE=2",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"b9fbdf1779186fc02aa59dd87597fe4e906892391614289a4e6eedba398a3e770347b5b07110cca8c11fa3ba85bb711626ae69832e74c69ca8340d040a465907 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del --no-network .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "COPY docker-entrypoint.sh / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENV NJS_VERSION=0.8.5",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "ENV NJS_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-14T23:51:24Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"b9fbdf1779186fc02aa59dd87597fe4e906892391614289a4e6eedba398a3e770347b5b07110cca8c11fa3ba85bb711626ae69832e74c69ca8340d040a465907 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make module-geoip module-image-filter module-njs module-xslt                 \u0026\u0026 apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 apk add --no-cache curl ca-certificates # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-09-20T06:22:01Z",
          "created_by": "COPY /app/build /usr/share/nginx/html # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-09-20T06:22:01Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-09-20T06:22:01Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:16113d51b7181f20135f51e8ffbaead20a7671cd783017601f198748ce8a8ebf",
          "sha256:087523896fec79e6bb9a319e7f8ef815b8452cfe7e09d210d76b3b2bec1624cf",
          "sha256:ec57fe534ca60202e2933a10f3459fe45b91e91b06f45c51007542baef5d79d9",
          "sha256:debbe47577a8bd3a42aebc03dbfc1e267a13f156a5672cf5349262309173a037",
          "sha256:7ced8510153ddbf8855b66da43acca94a8cf294514842e1cb23a2612e79ad0d3",
          "sha256:175255ec9886d89c7ed8cf5114877abb07509db1614108d4ee97b9a3bb74fe38",
          "sha256:4da863068df69343f02bbd7343766375e8af0dc0917d76ba680b7651839536d6",
          "sha256:dbc055046852e458eb4f33b89dd57564ec29870fdb874902b0f56aa2b4ca9732",
          "sha256:bdb59690a452041127334eb32d90b404dc8f5e072e0465339c4bba01576f7d64"
        ]
      },
      "config": {
        "Cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "Entrypoint": [
          "/docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NGINX_VERSION=1.27.1",
          "PKG_RELEASE=1",
          "DYNPKG_RELEASE=2",
          "NJS_VERSION=0.8.5",
          "NJS_RELEASE=1"
        ],
        "Labels": {
          "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
        },
        "ArgsEscaped": true,
        "StopSignal": "SIGQUIT"
      }
    }
  },
  "Results": [
    {
      "Target": "my-react-app (alpine 3.20.3)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
