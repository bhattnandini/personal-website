{"ast":null,"code":"var _jsxFileName = \"/workspace/personal-website/src/components/Contact.cy.jsx\";\nimport React from 'react';\nimport Contact from './Contact';\nimport { mount } from \"cypress/react\";\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"../lang/en.json\"; // Adjust the path to your messages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('<Contact />', () => {\n  it('renders', () => {\n    // see: https://on.cypress.io/mounting-react\n    cy.mount( /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: \"en\",\n      messages: messages,\n      children: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n    cy.get('input[id=\"name\"]').type(\"Hinddeep\"); // Type in an input field\n\n    cy.get('input[id=\"email\"]').type(\"hin@gmail.com\"); // Type in an input field\n\n    cy.get('input[id=\"subject\"]').type(\"Subject\"); // Type in an input field\n\n    // cy.get('textarea[id=\"message\"]').type(\"\"); // Type in another input field\n\n    // cy.get('textarea[id=\"message\"]').should(\"have.value\", \"\"); // Type in another input field.\n\n    cy.get('textarea[id=\"message\"]').type(\"HI\").should(\"not.have.value\", \"\"); // Type in another input field.\n\n    cy.get(\"form\").submit();\n    cy.get(\"form\").should(\"contain\", \"Entered value does not match email format\");\n  });\n});","map":{"version":3,"names":["React","Contact","mount","IntlProvider","messages","jsxDEV","_jsxDEV","describe","it","cy","locale","children","fileName","_jsxFileName","lineNumber","columnNumber","get","type","should","submit"],"sources":["/workspace/personal-website/src/components/Contact.cy.jsx"],"sourcesContent":["import React from 'react'\nimport Contact from './Contact'\n\nimport { mount } from \"cypress/react\";\n\nimport { IntlProvider } from \"react-intl\";\n\nimport messages from \"../lang/en.json\"; // Adjust the path to your messages\n\n\ndescribe('<Contact />', () => {\n  it('renders', () => {\n    // see: https://on.cypress.io/mounting-react\n    cy.mount(\n\n      <IntlProvider locale=\"en\" messages={messages}>\n\n        <Contact />\n\n      </IntlProvider>\n\n    );\n    cy.get('input[id=\"name\"]').type(\"Hinddeep\"); // Type in an input field\n\n    cy.get('input[id=\"email\"]').type(\"hin@gmail.com\"); // Type in an input field\n\n    cy.get('input[id=\"subject\"]').type(\"Subject\"); // Type in an input field\n\n    // cy.get('textarea[id=\"message\"]').type(\"\"); // Type in another input field\n\n    // cy.get('textarea[id=\"message\"]').should(\"have.value\", \"\"); // Type in another input field.\n\n    cy.get('textarea[id=\"message\"]').type(\"HI\").should(\"not.have.value\", \"\"); // Type in another input field.\n\n    cy.get(\"form\").submit();\n\n    cy.get(\"form\").should(\"contain\", \"Entered value does not match email format\");\n  })\n})\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,KAAK,QAAQ,eAAe;AAErC,SAASC,YAAY,QAAQ,YAAY;AAEzC,OAAOC,QAAQ,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxCC,QAAQ,CAAC,aAAa,EAAE,MAAM;EAC5BC,EAAE,CAAC,SAAS,EAAE,MAAM;IAClB;IACAC,EAAE,CAACP,KAAK,eAENI,OAAA,CAACH,YAAY;MAACO,MAAM,EAAC,IAAI;MAACN,QAAQ,EAAEA,QAAS;MAAAO,QAAA,eAE3CL,OAAA,CAACL,OAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAEhB,CAAC;IACDN,EAAE,CAACO,GAAG,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;IAE7CR,EAAE,CAACO,GAAG,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;;IAEnDR,EAAE,CAACO,GAAG,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE/C;;IAEA;;IAEAR,EAAE,CAACO,GAAG,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC;;IAE1ET,EAAE,CAACO,GAAG,CAAC,MAAM,CAAC,CAACG,MAAM,CAAC,CAAC;IAEvBV,EAAE,CAACO,GAAG,CAAC,MAAM,CAAC,CAACE,MAAM,CAAC,SAAS,EAAE,2CAA2C,CAAC;EAC/E,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}