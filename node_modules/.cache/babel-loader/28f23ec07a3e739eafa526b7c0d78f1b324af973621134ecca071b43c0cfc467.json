{"ast":null,"code":"describe('Contact Us Form', () => {\n  // beforeEach(() => {\n  //   // Visit the page containing the Contact Us form before each test\n  //   cy.visit('https://3000-nandineebha-personalweb-ivmwcodut1j.ws-us115.gitpod.io/');\n  // });\n\n  it('should submit the contact form successfully', () => {\n    // Fill out the form fields\n    cy.get('input[name=\"name\"]').type('John Doe');\n    cy.get('input[name=\"email\"]').type('johndoe@example.com');\n    cy.get('textarea[name=\"message\"]').type('This is a test message.');\n\n    // Submit the form\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify form submission success message (adjust selector as necessary)\n    cy.get('.success-message').should('contain', 'Thank you for your message!');\n  });\n  it('should show validation errors when submitting an empty form', () => {\n    // Submit the form without filling it out\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify that validation errors are displayed (adjust selectors as necessary)\n    cy.get('.error-message-name').should('contain', 'Name is required');\n    cy.get('.error-message-email').should('contain', 'Email is required');\n    cy.get('.error-message-message').should('contain', 'Message is required');\n  });\n  it('should show an error for invalid email format', () => {\n    // Fill out the form with an invalid email\n    cy.get('input[name=\"name\"]').type('John Doe');\n    cy.get('input[name=\"email\"]').type('invalid-email');\n    cy.get('textarea[name=\"message\"]').type('This is a test message.');\n\n    // Submit the form\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify that an error is shown for the email field\n    cy.get('.error-message-email').should('contain', 'Please enter a valid email address');\n  });\n});","map":{"version":3,"names":["describe","it","cy","get","type","click","should"],"sources":["/workspace/personal-website/cypress/component/Contact.cy.jsx"],"sourcesContent":["describe('Contact Us Form', () => {\n  // beforeEach(() => {\n  //   // Visit the page containing the Contact Us form before each test\n  //   cy.visit('https://3000-nandineebha-personalweb-ivmwcodut1j.ws-us115.gitpod.io/');\n  // });\n\n  it('should submit the contact form successfully', () => {\n    // Fill out the form fields\n    cy.get('input[name=\"name\"]').type('John Doe');\n    cy.get('input[name=\"email\"]').type('johndoe@example.com');\n    cy.get('textarea[name=\"message\"]').type('This is a test message.');\n\n    // Submit the form\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify form submission success message (adjust selector as necessary)\n    cy.get('.success-message').should('contain', 'Thank you for your message!');\n  });\n\n  it('should show validation errors when submitting an empty form', () => {\n    // Submit the form without filling it out\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify that validation errors are displayed (adjust selectors as necessary)\n    cy.get('.error-message-name').should('contain', 'Name is required');\n    cy.get('.error-message-email').should('contain', 'Email is required');\n    cy.get('.error-message-message').should('contain', 'Message is required');\n  });\n\n  it('should show an error for invalid email format', () => {\n    // Fill out the form with an invalid email\n    cy.get('input[name=\"name\"]').type('John Doe');\n    cy.get('input[name=\"email\"]').type('invalid-email');\n    cy.get('textarea[name=\"message\"]').type('This is a test message.');\n\n    // Submit the form\n    cy.get('button[type=\"submit\"]').click();\n\n    // Verify that an error is shown for the email field\n    cy.get('.error-message-email').should('contain', 'Please enter a valid email address');\n  });\n});\n"],"mappings":"AAAAA,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChC;EACA;EACA;EACA;;EAEAC,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtD;IACAC,EAAE,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IAC7CF,EAAE,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAC,qBAAqB,CAAC;IACzDF,EAAE,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAAC,yBAAyB,CAAC;;IAElE;IACAF,EAAE,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAACE,KAAK,CAAC,CAAC;;IAEvC;IACAH,EAAE,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACG,MAAM,CAAC,SAAS,EAAE,6BAA6B,CAAC;EAC7E,CAAC,CAAC;EAEFL,EAAE,CAAC,6DAA6D,EAAE,MAAM;IACtE;IACAC,EAAE,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAACE,KAAK,CAAC,CAAC;;IAEvC;IACAH,EAAE,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAACG,MAAM,CAAC,SAAS,EAAE,kBAAkB,CAAC;IACnEJ,EAAE,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAACG,MAAM,CAAC,SAAS,EAAE,mBAAmB,CAAC;IACrEJ,EAAE,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAACG,MAAM,CAAC,SAAS,EAAE,qBAAqB,CAAC;EAC3E,CAAC,CAAC;EAEFL,EAAE,CAAC,+CAA+C,EAAE,MAAM;IACxD;IACAC,EAAE,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IAC7CF,EAAE,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;IACnDF,EAAE,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAAC,yBAAyB,CAAC;;IAElE;IACAF,EAAE,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAACE,KAAK,CAAC,CAAC;;IAEvC;IACAH,EAAE,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAACG,MAAM,CAAC,SAAS,EAAE,oCAAoC,CAAC;EACxF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}