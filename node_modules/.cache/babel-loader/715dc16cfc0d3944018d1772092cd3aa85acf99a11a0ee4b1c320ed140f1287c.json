{"ast":null,"code":"import React,{useState}from'react';import{IntlProvider}from'react-intl';import French from'../lang/fr.json';import English from'../lang/en.json';import{jsx as _jsx}from\"react/jsx-runtime\";export const Context=/*#__PURE__*/React.createContext();const local=navigator.language;let lang;switch(local){case\"en\":lang=\"English\";break;case\"fr\":lang=\"French\";break;default:lang=\"English\";break;}const Wrapper=props=>{const[locale,setLocale]=useState(local);const[messages,setMessages]=useState(lang);function selectLanguage(e){const newLocale=e.target.value;setLocale(newLocale);switch(newLocale){case\"en\":setMessages(English);break;case\"fr\":setMessages(French);break;default:setMessages(English);break;}}return/*#__PURE__*/_jsx(Context.Provider,{value:{locale,selectLanguage},children:/*#__PURE__*/_jsx(IntlProvider,{messages:messages,locale:local,children:props.children})});};export default Wrapper;","map":{"version":3,"names":["React","useState","IntlProvider","French","English","jsx","_jsx","Context","createContext","local","navigator","language","lang","Wrapper","props","locale","setLocale","messages","setMessages","selectLanguage","e","newLocale","target","value","Provider","children"],"sources":["/workspace/personal-website/src/components/Wrapper.jsx"],"sourcesContent":["\nimport React, {useState} from 'react';\nimport {IntlProvider} from 'react-intl';\nimport French from '../lang/fr.json';\nimport English from '../lang/en.json';\n\nexport const Context = React.createContext();\nconst local = navigator.language;\n\nlet lang;\nswitch (local) {\n    case \"en\":\n        lang = \"English\"\n        break;\n    case \"fr\":\n        lang = \"French\"\n        break;\n\n    default:\n        lang = \"English\"\n        break;\n}\n\nconst Wrapper = (props) => {\n    const [locale, setLocale] = useState(local);\n    const [messages, setMessages] = useState(lang);\n    function selectLanguage(e) {\n        const newLocale = e.target.value;\n        setLocale(newLocale);\n        switch (newLocale) {\n            case \"en\":\n                setMessages(English);\n                break;\n            case \"fr\":\n                setMessages(French);\n                break;\n        \n            default:\n                setMessages(English);\n                break;\n        }\n    }\n    return (\n        <Context.Provider value = {{locale, selectLanguage}}>\n            <IntlProvider messages={messages} locale={local}>\n                {props.children}\n            </IntlProvider>\n        </Context.Provider>\n    );\n }\n export default Wrapper;"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAAQC,YAAY,KAAO,YAAY,CACvC,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,MAAO,MAAM,CAAAC,OAAO,cAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC,CAC5C,KAAM,CAAAC,KAAK,CAAGC,SAAS,CAACC,QAAQ,CAEhC,GAAI,CAAAC,IAAI,CACR,OAAQH,KAAK,EACT,IAAK,IAAI,CACLG,IAAI,CAAG,SAAS,CAChB,MACJ,IAAK,IAAI,CACLA,IAAI,CAAG,QAAQ,CACf,MAEJ,QACIA,IAAI,CAAG,SAAS,CAChB,MACR,CAEA,KAAM,CAAAC,OAAO,CAAIC,KAAK,EAAK,CACvB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAACQ,KAAK,CAAC,CAC3C,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAACW,IAAI,CAAC,CAC9C,QAAS,CAAAO,cAAcA,CAACC,CAAC,CAAE,CACvB,KAAM,CAAAC,SAAS,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAChCP,SAAS,CAACK,SAAS,CAAC,CACpB,OAAQA,SAAS,EACb,IAAK,IAAI,CACLH,WAAW,CAACd,OAAO,CAAC,CACpB,MACJ,IAAK,IAAI,CACLc,WAAW,CAACf,MAAM,CAAC,CACnB,MAEJ,QACIe,WAAW,CAACd,OAAO,CAAC,CACpB,MACR,CACJ,CACA,mBACIE,IAAA,CAACC,OAAO,CAACiB,QAAQ,EAACD,KAAK,CAAI,CAACR,MAAM,CAAEI,cAAc,CAAE,CAAAM,QAAA,cAChDnB,IAAA,CAACJ,YAAY,EAACe,QAAQ,CAAEA,QAAS,CAACF,MAAM,CAAEN,KAAM,CAAAgB,QAAA,CAC3CX,KAAK,CAACW,QAAQ,CACL,CAAC,CACD,CAAC,CAE1B,CAAC,CACD,cAAe,CAAAZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}